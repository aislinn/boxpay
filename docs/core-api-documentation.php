<?php $subtitle = "Core API Documentation";
include($_SERVER['DOCUMENT_ROOT'].'/includes/head.php');		
include($_SERVER['DOCUMENT_ROOT'].'/includes/header.php')?>		
	
		
	<div class="row primary-row">	
  		
  		
  		
  		<section role="main">
  			
  			
  			<div class="row primary-container documentation ">
  				<div class="twelve columns">
  					<div class="row">
  					
  						<div class="three columns">
  							
  							
  							<?php include($_SERVER['DOCUMENT_ROOT'].'/includes/sidebar-docs.php')?>
  								
  						  							
  						</div>
  						
  						
  						<div class="seven columns offset-by-one end passage">
  						
  							<h2>Core API documentation</h2>
  							<h3>Introduction</h3>
  							
  							<p>boxPAY provides ready-made payment solutions for a variety of platforms: </p>
  							
  							<ul>
  							<li>Desktop Payment box (desktop web browsers)</li>
  							<li>Smartphone Widget (used in Smartphone browsers on iPhone, Android, Blackberry, Windows Phone)</li>
  							<li>Android SDK for Android App Billing</li>
  							<li>Feature Phone Widget – (used in browsers of feature phones)</li>
  							</ul>
  							
  							<p>The boxPAY Core API is an additional option to approved merchants who wish to further tailor the user experience and provide a more seamless transition between the merchant’s website, mobile website or app and the customer payment process.</p>
  							
  							
  							<h3>Consumers of the boxPAY Core API</h3>
  							<p>The Core API can be consumed by server and client devices alike. By default, there are no IP restrictions. This gives the merchant the option to either develop a purely client side solution, or one that involves both client and server side.</p>
  						
  						
  							<h3>Security</h3>
  							
  							<p>By default, the API can be called by any client device. Fulfilment of service depends on reliable communication of the status of the payment between boxPAY and merchant. This communication consists of:</p>
  							
  							<ul>
  							<li>Server to Server push notification between boxPAY and the merchant. This is the NotificationURL that is defined by the merchant when setting up the payment box on the boxPAY portal (<a href="http://www.boxpay.com">www.boxpay.com</a>). boxPAY call this URL every time there is a change in the status of a payment.</li>
  							<li><em>CheckStatus</em> API call. This can be called by client device or merchant server to provide details on the status of a payment. boxPAY recommend that fulfilment of the service to the customer be handled by the merchant system, not by the client side solution (e.g client app). boxPAY provides a more secure <em>CheckStatus</em> API call in the <strong>Merchant API</strong> which is discussed later in this document.</li>
  							</ul>  							
  							

					 		<p>Merchants have the option to turn off client side access to the Core API completely (if the merchant is developing a server side solution and is thus acting as a proxy between the client and boxPAY) or to only allow access to clients that present a valid “Access Token”. The “Access Token” is generated by boxPAY via a secure call from the Merchant server. More details on this are available on request.</p>
					 		
					 		<h3>Merchant API</h3>
					 
					 		<p>boxPAY also provides a Merchant API that provides extra security and is accessible only by the merchant. Fulfilment of service to the customer should rely on the CheckStatus API call of the Merchant API or the boxPAY to Merchant notification (server-to-server) via the “NotificationURL”. This is described further on the boxPAY portal at <a href="http://www.boxpay.com">www.boxpay.com</a></p>
					 		
					 		<p>Documentation on the Merchant API will be provided separately.</p>
					 		
			 		
					 		<h3>Compliance and Approval</h3>
					 		
					 		<p>The boxPAY Core API allows merchants to customize the user payment process. This process involves strict regulations and as such the merchant must adhere to the guidelines set out by boxPAY and present all required information to the user. Failure to do so will result in immediate termination of service. Merchants must apply to boxPAY for approval of all services that use the Core API before going to market.</p>
					 	
  						
							<h3>Summary of the Core API’s functionality</h3>
							
							<p>The boxPAY Core API can be divided into 2 distinct types of calls:</p>
							
							<ul>
							<li>Payment API calls – these are calls related to creating and processing payment sessions</li>
							<li>Helper functions – additional functions to retrieve infrequently changing data, e.g. list of
							network operators, prices available in a country etc.</li>
							</ul>
							
							<h3>Processing customer mobile numbers</h3>
		
							<p>While the API handles the appropriate payment process in each country, the merchant will need to process the user’s mobile number. For a successful payment to be made through the API, the merchant will often need to pass the MSISDN (user’s mobile phone number) when initiating the payment process. This MSISDN must be a valid number in international format, so the merchant must perform the necessary validation and processing to provide it as such. boxPAY provides support and code snippets to assist in this regard. These are included in this document in Appendix F.</p>
							
							
							<h3>URLs</h3>
							<p><a href="http://api.boxpay.com/v1_5.asmx">http://api.boxpay.com/v1_5.asmx</a><br />
							The API is currently available in SOAP XML. The WSDL can be found at <a href="http://api.boxpay.com/v1_5.asmx?WSDL">http://api.boxpay.com/v1_5.asmx?WSDL</a></p>
							
							
							<h3>Support</h3>
							<p>For all support queries, contact <a href="mailto:support@boxpay.com">support@boxpay.com</a></p>

	
	
  							<h3>Payment API Calls Summary</h3>
  							<ul class="no-bullet">
  							<li><strong>InitiatePayment</strong> – Initiates a payment session on the boxPAY platform Set</li>
  							<li><strong>MSISDN</strong> – Assigns the user’s mobile number to the payment session </li>
  							<li><strong>GetPaymentInfo</strong> – Gets static information relating to a payment item for as specific country</li>
  							<li><strong>CheckStatus</strong> – Provides status information on a payment session </li>
  							<li><strong>ValidatePIN</strong> – Validates a PIN sent to the user and completes payment for valid pin </li>
  							<li><strong>SendSimulatedMessage</strong> – Used in Simulation mode ONLY to simulate a message sent from the user’s handset to boxPAY </li>
  							<li><strong>GetSimulatedMessages</strong> – Used in Simulation mode ONLY to retrieve simulated messages sent from boxPAY to the user’s handset </li>
  							<li><strong>ProcessPaymentSessionFromLink</strong> - This API call is currently not to be used by Merchants </li>
  							<li><strong>GetReturnUrl</strong> – Retrieves the URL to which the user should be redirected. This is defined by the merchant on payment session initialization. The merchant will not be required to use this API call </li>
  							<li><strong>IPAddressToCountryCode</strong> – Performs an IP lookup to return the country to which the IP address belongs </li>
  							
  							</ul>
  							
  							<h3>Helper Functions Summary</h3>
  							
  							<ul class="no-bullet">
  							
  							<li><strong>GetNetworks</strong> – Gets a list of networks for a specified country </li>
  							<li><strong>GetAllNetworks</strong> – Gets a complete list of networks for all countries </li>
  							<li><strong>GetCountries</strong> – Retrieves a list of countries supported by boxPAY </li>
  							<li><strong>GetCountry</strong> – Retrieves details for a specific country supported by boxPAY </li>
  							<li><strong>GetNetworkMapping</strong> – Retrieves information to map MMC MNC values to boxPAY network id, which is used in other API calls </li>
  							<li><strong>GetPrices</strong> – Retrieves the available price points for a specified country</li>
  							
  							</ul>
  						

  							<h3>1. InitiatePayment</h3>
  						
  							<p>This method is used to initiate a payment for a specific item. The payment item must be set up in the Payment Box admin on the boxpay.com website prior to using this method.</p>
  							
  							<p>Full details on the format of the request are detailed here: <a href="http://api.boxpay.com/v1_5.asmx?op=InitiatePayment">http://api.boxpay.com/v1_5.asmx?op=InitiatePayment</a></p>
  						
  							<h4>Request</h4>
  						
  						
  							<table>

							<thead>
								<tr>
								<th>Parameter</th>
								<th>Description</th>
								<th>Required</th>
								</tr>
							</thead>
							
							
							<tbody>
								<tr>
								<td>ServiceId</td>
								<td>boxPAY service Id. This is the ID for your Payment Box.</td>
								<td>Yes</td>
								</tr>
								
								<tr>
								<td>CountryCode</td>
								<td>The ISO 3166-1 alpha-2 code (i.e. 2 letter code) for a country.</td>
								<td>Yes</td>
								</tr>
								
								<tr>
								<td>SimulationMode</td>
								<td>A Boolean value (true/false) to indicate whether the payment is real (SimulationMode =False), i.e. the user will be charged OR virtual (SimulationMode =True). When SimulationMode =False, you will need to use an actual handset to complete the payment. When SimulationMode =True, you will need to use the Test Console (at <a href="http://www.boxpay.com/MerchantTool">http://www.boxpay.com/MerchantTool</a>) OR the <em>SendSimilatedMessage</em> and <em>GetSimulatedMessages</em> calls to simulate the payment.</td>
								<td>Yes</td>
								</tr>
								
								<tr>
								<td>MSISDN</td>
								<td>The user’s mobile number, in international format. E.g 447123456789 (in the U.K.). It can also be omitted in this call and, if MSISDNRequired =true in the response should be later set (after taking number from user) via the <em>SetMSISDN</em> API call. See Appendix F for help in getting the international MSISDN.</td>
								<td>No</td>
								</tr>
								
								
								<tr>
								<td>ItemCode</td>
								<td>Your custom code for the payment item (this is unique to your service in any given country)</td>
								<td>Yes</td>
								</tr>
								
								<tr>
								<td>LanguageCode</td>
								<td>2-character ISO 639-1 code that specifies the language to be used. This must either be the default or another language that has been configured in the payment box admin. If not specified, then the default language of the country code will be used. E.g. “en”</td>
								<td>No</td>
								</tr>
								
								<tr>
								<td>CustomString</td>
								<td>Any custom string. This value will be included in the GET request to the service's NotificationURL (server side)</td>
								<td>No</td>
								</tr>
								
								<tr>
								<td>NetworkId</td>
								<td>An integer value indicating the user’s network operator(carrier). A list of NetworkIds and associated networks is available in the <em>GetNetworks</em> and <em>GetAllNetworks</em> call. A value of 0 should be passed if network is not known.</td>
								<td>Yes</td>
								</tr>
								
								<tr>
								<td>ClientPlatform</td>
								<td>String value - Please refer to Appendix D – Client Platforms</td>
								<td>Yes</td>
								</tr>
								
								
								<tr>
								<td>ReturnUrl</td>
								<td>The URL to which the user should be returned on completing/exiting payment process. This is only used for third party implementations.</td>
								<td>No</td>
								</tr>
								
								
								<tr>
								<td>ReturnAllResources</td>
								<td>A Boolean (true/false) value to indicate if all resources should be returned. Resources provide the text that should be displayed to user throughout the payment process</td>
								<td>Yes</td>
								</tr>
								
								<tr>
								<td>Server</td>
								<td>A Boolean (true/false) value to indicate if the requesting is originating from a merchant server (Server=true) or a client device (Server=false)</td>
								<td>Yes</td>
								</tr>
								
								<tr>
								<td>Reference</td>
								<td>SNot currently used. Supply any string value.</td>
								<td>No</td>
								</tr>
								
								<tr>
								<td>AccessToken</td>
								<td>If additional security is enabled then a valid token should be passed. By default, a blank string should be passed.</td>
								<td>No</td>
								</tr>
								


							</tbody>
							</table>
  							  		
  							  		
  							  		
  							  		
  							  <h4>Response</h4>
  							    						
    						
    					<table>
  
  							<thead>
  								<tr>
  								<th>Parameter</th>
  								<th>Description</th>
  					
  								</tr>
  							</thead>
  							
  							
  							<tbody>
  								<tr>
  								<td>RequestProcessed</td>
  								<td>A Boolean value (true or false) to indicate whether or not the request was processed successfully.</td>
  								</tr>	
  								
  								<tr>
  								<td>ReasonCode</td>
  								<td>An enumeration to give extra details on the reason for the result given by RequestProcessed</td>
  								</tr>	
  								
  								<tr>
  								<td>AdditionalInfo</td>
  								<td>Additional textual info for debugging purposes</td>
  								</tr>	
  								
  								<tr>
  								<td>PaymentItemInfo</td>
  								<td>Refer to PaymentItemInfo in Appendix E for more details</td>
  								</tr>	
  		
  								
  								<tr>
  								<td>SessionId</td>
  								<td>A string value that uniquely identifies the payment session</td>
  								</tr>	
  								
  								<tr>
  								<td>Shortcode</td>
  								<td>The telephone number associated with the billing. Depending on the payment capture method, the user may be required to send a message to this number in order to make the payment.</td>
  								</tr>	
  								
  								<tr>
  								<td>Keyword</td>
  								<td>If supplied, this is the message that the user/user’s handset must send to the Shortcode.</td>
  								</tr>	
  								
  								<tr>
  								<td>PaymentCapture Method</td>
  								<td>String value indicating the user interaction procedure necessary for completing this payment. This value will determine what instructions the user should be given to complete the payment. More details on this in Appendix B.</td>
  								</tr>	
  								
  								<tr>
  								<td>MSISDNRequired</td>
  								<td>A Boolean value (true or false) to indicate if the MSISDN is required prior to user interaction (e.g Sending a message). If true then the MSISDN should be set in the InitiatePayment call or the SetMSISDN call.</td>
  								</tr>	
  								
  								<tr>
  								<td>PaymentStatus</td>
  								<td>Refer to PaymentStatus in Appendix E for more details</td>
  								</tr>		
  		
  							</tbody>
  		
  						</table>	  		
  							  		
  							  		
  							  		
  						<h3>2. SetMSISDN</h3>
  						
  						<p>This call need only be made subsequent to the InitiatePayment call when the MSISDN has been omitted from the InitiatePayment call AND the StatusReason value of the InitiatePayment call is “AwaitingMSISDNEntry”. (i.e. the payment can only proceed when the customer has entered the mobile number).</p>
  						
  						<p>Full details on the format of the request are detailed here:	<br/>
  							<a href="http://api.boxpay.com/v1_5.asmx?op=SetMSISDN">http://api.boxpay.com/v1_5.asmx?op=SetMSISDN</a>
  						</p>
  						
  						
  						<h4>Request</h4>	
  						  		
  							
  						<table>
  						
							<thead>
								<tr>
								<th>Parameter</th>
								<th>Description</th>
								<th>Required</th>
								</tr>
							</thead>
							
							
							<tbody>
								<tr>
								<td>SessionId</td>
								<td>The unique identifier for the payment session, as returned in <em>InitiatePayment</em>.</td>
								<td>Yes</td>
								</tr>
								
								<tr>
								<td>MSISDN</td>
								<td>The user’s mobile number, in international format. E.g <em>447123456789</em> (in the U.K.). 
									See Appendix F for help in getting the international MSISDN.</td>
								<td>Yes</td>
								</tr>
								
								
								<tr>
								<td>NetworkId</td>
								<td>An integer value indicating the user’s network operator (carrier). A list of Network ids and associated networks will be provided on request. The value 0 means as yet unidentified.</td>
								<td>Yes</td>
								</tr>
								
								<tr>
								<td>AccessToken</td>
								<td>If additional security is enabled then a valid token should be passed. By default, a blank string should be passed.</td>
								<td>No</td>
								</tr>

								
  							  </tbody>
  							
  						</table>	  		
  							  	
  							  	
  							  	
  					<h4>Response</h4>			  	
  							  	
  							  	
  					<table>
  					  						
						<thead>
							<tr>
							<th>Parameter</th>
							<th>Description</th>
							<th>Required</th>
							</tr>
						</thead>
						
						
						<tbody>
							<tr>
							<td>RequestProcessed</td>
							<td>A Boolean value (true or false) to indicate whether or not the request was processed successfully.</td>
							<td>Yes</td>
							</tr>
							
							<tr>
							<td>ReasonCode</td>
							<td>An enumeration to give extra details on the reason for the result given by RequestProcessed</td>
							<td>Yes</td>
							</tr>
							
							
							<tr>
							<td>AdditionalInfo</td>
							<td>Additional textual info for debugging purposes</td>
							<td></td>
							</tr>
							
							<tr>
							<td>PaymentStatus</td>
							<td>Refer to PaymentStatus in Appendix E for more details</td>
							<td></td>
							</tr>

							
							  </tbody>
							
						</table>	  		  		
  							  		
  							  		
  						<h3>3. GetPaymentInfo</h3>	 
  						
  						<p>This method can be used prior to calling InitiatePayment, to retrieve relevant information relating to a payment item for a given service. Information returned includes:</p> 	
  							
  						<ul>
  							<li>End user charge</li>
  							<li>Terms and Conditions</li>
  							<li>Item Description</li>
  						
  						</ul>	
  						  		
  						<p>Full details on the format of the request are detailed here:<br />
  							<a href="http://api.boxpay.com/v1_5.asmx?op=GetPaymentInfo">http://api.boxpay.com/v1_5.asmx?op=GetPaymentInfo</a>
  						</p>	  		
  							  		
  							  		
  					<h4>Request</h4>			  	
  							  	
  							  	
  					<table>
  					  						
						<thead>
							<tr>
							<th>Parameter</th>
							<th>Description</th>
							<th>Required</th>
							</tr>
						</thead>
						
						
						<tbody>
							<tr>
							<td>ServiceId</td>
							<td>boxPAY service Id. This is the ID for your Payment Box.</td>
							<td>Yes</td>
							</tr>
							
							<tr>
							<td>CountryCode</td>
							<td>The ISO 3166-1 alpha-2 code (i.e. 2 letter code) for a country e.g FR</td>
							<td>Yes</td>
							</tr>
							
							
							<tr>
							<td>ItemCode</td>
							<td>Your custom code for the payment item (this is unique to your service in any given country)</td>
							<td>Yes</td>
							</tr>
							
							<tr>
							<td>LanguageCode</td>
							<td>2-character ISO 639-1 code that specifies the language to be used. This must either be the default or another language that has been configured in the payment box admin.If not specified, then the default language of the country code will be used. E.g “en”</td>
							<td>No</td>
							</tr>
							
							
							<tr>
							<td>NetworkId</td>
							<td>An integer value indicating the user’s network operator(carrier). A list of NetworkIds and associated networks is available in the <em>GetNetworks</em> and <em>GetAllNetworks</em> call. A value of 0 should be passed if network is not known.</td>
							<td></td>
							</tr>
							
							<tr>
							<td>ClientPlatform</td>
							<td>String value - Please refer to Appendix D – Client Platforms</td>
							<td>Yes</td>
							</tr>
							
							
							<tr>
							<td>ReturnAllResources</td>
							<td>A Boolean (true/false) value to indicate if all resources should be returned. Resources provide the text that should be displayed to user throughout the payment process</td>
							<td>Yes</td>
							</tr>
							
							<tr>
							<td>AccessToken</td>
							<td>If additional security is enabled then a valid token should be passed. By default, a blank string should be passed.</td>
							<td>No</td>
							</tr>
							

							
							  </tbody>
							
						</table>				  		
  							
  						
		  		<h4>Response</h4>			  	
		  				  	
		  				  	
		  		<table>
		  		  						
		  			<thead>
		  				<tr>
		  				<th>Parameter</th>
		  				<th>Description</th>
		  				
		  				</tr>
		  			</thead>
		  			
		  			
		  			<tbody>
		  				<tr>
		  				<td>RequestProcessed</td>
		  				<td>A Boolean value (true or false) to indicate whether or not the request was processed successfully.</td>
		  				
		  				</tr>
		  				
		  				<tr>
		  				<td>ReasonCode</td>
		  				<td>An enumeration to give extra details on the reason for the result given by RequestProcessed.</td>
		  				
		  				</tr>
		  				
		  				
		  				<tr>
		  				<td>AdditionalInfo</td>
		  				<td>Additional textual info for debugging purposes</td>
		  				
		  				</tr>
		  				
		  				<tr>
		  				<td>PaymentInfo</td>
		  				<td>Refer to PaymentInfo in Appendix E for more details</td>
		  				
		  				</tr>
		  		
		  			</tbody>
		  						
  				</table>	
  				
  				
  				<h3>4. CheckStatus</h3>	
  				
  				<p>This method is used to check the status of a payment session. It can be called at regular intervals until such time as:</p>
  				
  				<ul>
  				
  					<li>The payment is successful or</li>
  					<li>The payment fails or</li>
  					<li>The payment is still pending after a considerable period of time (in such cases the merchant will still be notified of an eventual successful payment via the server side request to the Notification URL)</li>
  				
  				
  				</ul>
  				
  				<p>The merchant should allow at least 2 seconds between each <em>CheckStatus</em> request.</p>
  				
  				<p>Full details on the format of the request are detailed here: <br />
  				<a href="http://api.boxpay.com/v1_5.asmx?op=CheckStatus">http://api.boxpay.com/v1_5.asmx?op=CheckStatus</a></p>
  						
  						
  							
  				<h4>Request</h4>			  		
  							  						
  						
  				<table>
  				  						
  					<thead>
  						<tr>
  						<th>Parameter</th>
  						<th>Description</th>
  						<th>Required</th>
  						
  						</tr>
  					</thead>
  					
  					
  					<tbody>
  						<tr>
  						<td>SessionId</td>
  						<td>The unique identifier for the payment session, as returned in <em>InitiatePayment</em>.</td>
  						<td>Yes</td>
  						</tr>
  						
  						<tr>
  						<td>AccessToken</td>
  						<td>If additional security is enabled then a valid token should be passed. By default, a blank string should be passed.</td>
  						<td>No</td>
  						</tr>
  						
  					
  				
  					</tbody>
  								
  				</table>	
  				
  				
  				
  				
  				<h4>Response</h4>			  		
  							  						
  						
  				<table>
  				  						
  					<thead>
  						<tr>
  						<th>Parameter</th>
  						<th>Description</th>
  						  						
  						</tr>
  					</thead>
  					
  					
  					<tbody>
  						<tr>
  						<td>RequestProcessed</td>
  						<td>A Boolean value (true or false) to indicate whether or not the request was processed successfully. This has no bearing on the status of the payment.</td>
  						
  						</tr>
  						
  						<tr>
  						<td>ReasonCode</td>
  						<td>An enumeration to give extra details on the reason for the result given by RequestProcessed</td>
  						</tr>
  						
  						<tr>
  						<td>AdditionalInfo</td>
  						<td>Additional textual info for debugging purposes</td>
  						</tr>
  						
  						
  						<tr>
  						<td>PaymentStatus</td>
  						<td>Refer to PaymentStatus in Appendix E for more details</td>
  						</tr>
  						
  						
  					
  				
  					</tbody>
  								
  				</table>					
  						
  						
  						
  				<h3>5. ValidatePIN</h3>		
  				
  				<p>This method should only be used where the Payment Capture Method for the payment session involves a PIN (i.e PaymentCaptureMethod=PINConfirm) and the user has received the PIN and has submitted it to the merchant’s application.</p>
  				
  				<p>Full details on the format of the request are detailed here:<br />
  				<a href="http://api.boxpay.com/v1_5.asmx?op=ValidatePIN">http://api.boxpay.com/v1_5.asmx?op=ValidatePIN</a></p>
  						
  						
  						
			<h4>Request</h4>			  		
						  						
					
			<table>
			  						
				<thead>
					<tr>
					<th>Parameter</th>
					<th>Description</th>
					<th>Required</th>
					
					</tr>
				</thead>
				
				
				<tbody>
					<tr>
					<td>SessionId</td>
					<td>The unique identifier for the payment session, as returned in <em>InitiatePayment</em>.</td>
					<td>Yes</td>
					</tr>
					
					<tr>
					<td>PIN</td>
					<td>The PIN code sent to the user.</td>
					<td>Yes</td>
					</tr>
					
					
					<tr>
					<td>AccessToken</td>
					<td>If additional security is enabled then a valid token should be passed. By default, a blank string should be passed.</td>
					<td>No</td>
					</tr>
					
				
			
				</tbody>
							
			</table>	
			
			
			
			
			<h4>Response</h4>			  		
						  						
					
			<table>
			  						
				<thead>
					<tr>
					<th>Parameter</th>
					<th>Description</th>
					  						
					</tr>
				</thead>
				
				
				<tbody>
	
					<tr>
					<td>PaymentStatus</td>
					<td>Refer to PaymentStatus in Appendix E for more details</td>
					</tr>
					
					<tr>
					<td>ValidPin</td>
					<td>A Boolean value (true or false) to indicate whether or not the PIN entered was correct. If correct, boxPAY will proceed to complete the payment.</td>
					</tr>
				
			
				</tbody>
							
			</table>					
					  						
  						
  						
  						
  			<h3>6. SendSimulatedMessage</h3>		
  			
  			<p>In Simulation mode, this call can be used to simulate a message sent by the handset to boxPAY, as per the instructions given for the payment session. MSISDN or PaymentSessionId can be used to determine the mobile number from which the simulated message originates.</p>
  			
  			<p>Full details on the format of the request are detailed here:<br />
  			<a href="http://api.boxpay.com/v1_5.asmx?op=ValidatePIN">http://api.boxpay.com/v1_5.asmx?op=ValidatePIN</a></p>
  					
  								
  			
  					<h4>Request</h4>			  		
  								  						
  							
  					<table>
  					  						
  						<thead>
  							<tr>
  							<th>Parameter</th>
  							<th>Description</th>
  							<th>Required</th>
  							
  							</tr>
  						</thead>
  						
  						
  						<tbody>
  							<tr>
  							<td>Msg</td>
  							<td>The simulated message, e.g BOX</td>
  							<td>Yes</td>
  							</tr>
  							
  							<tr>
  							<td>MSISDN</td>
  							<td>The user’s mobile number, in international format. <em>E.g 447123456789</em> (in the U.K.). If omitted, a valid PaymentSessionId value must be given.</td>
  							<td>No</td>
  							</tr>
  							
  							
  							<tr>
  							<td>NetworkId</td>
  							<td>An integer value indicating the user’s network operator(carrier). A list of NetworkIds and associated networks is available in the <em>GetNetworks</em> and <em>GetAllNetworks</em> call. A value of 0 should be passed if network is not known.</td>
  							<td>Yes</td>
  							</tr>
  							
  							
  							<tr>
  							<td>PaymentSessionId</td>
  							<td>If MSISDN is omitted then this value is used to retrieve the MSISDN associated with this payment session. If no MSISDN is set on the payment session then the message will not be sent.</td>
  							<td>No</td>
  							</tr>
  							
  							<tr>
  							<td>Shortcode</td>
  							<td>The shortcode to which the message will be sent. This is given in the response of <em>InitiatePayment</em></td>
  							<td>Yes</td>
  							</tr>
  							
  							
  							<tr>
  							<td>AccessToken</td>
  							<td>If additional security is enabled then a valid token should be passed. By default, a blank string should be passed.</td>
  							<td>No</td>
  							</tr>
  							
  						
  					
  						</tbody>
  									
  					</table>	
  					
  					
  					
  					
  					<h4>Response</h4>			  		
  								  						
  							
  					<table>
  					  						
  						<thead>
  							<tr>
  							<th>Parameter</th>
  							<th>Description</th>
  							  						
  							</tr>
  						</thead>
  						
  						
  						<tbody>
  			
  							<tr>
  							<td>RequestProcessed</td>
  							<td>A Boolean value (true or false) to indicate whether or not the request was processed successfully.</td>
  							</tr>
  							
  							<tr>
  							<td>ReasonCode</td>
  							<td>An enumeration to give extra details on the reason for the result given by RequestProcessed</td>
  							</tr>
  							
  							<tr>
  							<td>AdditionalInfo</td>
  							<td>Additional textual info for debugging purposes</td>
  							</tr>
  						
  					
  						</tbody>
  									
  					</table>	
  					
  					
  					
  					
  					
  					
  					<h3>6. GetSimulatedMessages</h3>		
  					
  					<p>In Simulation mode, this call can be used to retrieve simulated messages sent by boxPAY to the end user’s handset. MSISDN or PaymentSessionId can be used to determine the mobile number for which to retrieve messages.</p>
  					
  					<p>Full details on the format of the request are detailed here:<br />
  					<a href="http://api.boxpay.com/v1_5.asmx?op=ValidatePIN">http://api.boxpay.com/v1_5.asmx?op=ValidatePIN</a></p>
  							
  										
  					
  							<h4>Request</h4>			  		
  										  						
  									
  							<table>
  							  						
  								<thead>
  									<tr>
  									<th>Parameter</th>
  									<th>Description</th>
  									<th>Required</th>
  									
  									</tr>
  								</thead>
  								
  								
  								<tbody>
  									<tr>
  									<td>Msg</td>
  									<td>The simulated message, e.g BOX</td>
  									<td>Yes</td>
  									</tr>
  									
  									<tr>
  									<td>MSISDN</td>
  									<td>The user’s mobile number, in international format. <em>E.g 447123456789</em> (in the U.K.). If omitted, a valid PaymentSessionId value must be given.</td>
  									<td>No</td>
  									</tr>
  									
  									
  									<tr>
  									<td>PaymentSessionId</td>
  									<td>If MSISDN is omitted then this value is used to retrieve the MSISDN associated with this payment session. If no MSISDN is set on the payment session then the message will not be sent.</td>
  									<td>No</td>
  									</tr>

  									
  									<tr>
  									<td>AccessToken</td>
  									<td>If additional security is enabled then a valid token should be passed. By default, a blank string should be passed.</td>
  									<td>No</td>
  									</tr>
  									
  								
  							
  								</tbody>
  											
  							</table>	
  							
  							
  							
  							
  							<h4>Response</h4>			  		
  										  						
  									
  							<table>
  							  						
  								<thead>
  									<tr>
  									<th>Parameter</th>
  									<th>Description</th>
  									  						
  									</tr>
  								</thead>
  								
  								
  								<tbody>
  					
  									<tr>
  									<td>RequestProcessed</td>
  									<td>A Boolean value (true or false) to indicate whether or not the request was processed successfully.</td>
  									</tr>
  									
  									<tr>
  									<td>ReasonCode</td>
  									<td>An enumeration to give extra details on the reason for the result given by RequestProcessed</td>
  									</tr>
  									
  									<tr>
  									<td>AdditionalInfo</td>
  									<td>Additional textual info for debugging purposes</td>
  									</tr>
  									
  									
  									<tr>
  									<td>Messages</td>
  									<td>A an array of simulated messages (SMS) to be displayed to end user</td>
  									</tr>
  									
  								
  							
  								</tbody>
  											
  							</table>						
  								
  					
  					
    					
	<h3>7. IPAddressToCountryCode</h3>		
	
	<p>This method takes and IP and returns details on the country to which the IP address relates. This can be used by the merchant to determine the country of origin of the end user and use this information to initiate a payment session with the appropriate parameters.</p>
	
	<p>If no match is found then no country information will be returned.</p>
	
	<p>Full details on the format of the request are detailed here:<br />
	<a href="http://api.boxpay.com/v1_5.asmx?op=IPAddressToCountryCode">http://api.boxpay.com/v1_5.asmx?op=IPAddressToCountryCode</a></p>
			
						
	
			<h4>Request</h4>			  		
						  						
					
			<table>
			  						
				<thead>
					<tr>
					<th>Parameter</th>
					<th>Description</th>
					<th>Required</th>
					
					</tr>
				</thead>
				
				
				<tbody>
					<tr>
					<td>IPAdress</td>
					<td>The end user’s IP address as a string value. This can be an empty string – in this case boxPAY will return the country information relating to the client making the request. For client side implementations, leave this parameter as an empty string.</td>
					<td>No</td>
					</tr>
					
				
			
				</tbody>
							
			</table>	
			
			
			
			
			<h4>Response</h4>			  		
						  						
					
			<table>
			  						
				<thead>
					<tr>
					<th>Parameter</th>
					<th>Description</th>
					  						
					</tr>
				</thead>
				
				
				<tbody>
	
					<tr>
					<td>RequestProcessed</td>
					<td>A Boolean value (true or false) to indicate whether or not the request was processed successfully.</td>
					</tr>
					
					<tr>
					<td>ReasonCode</td>
					<td>An enumeration to give extra details on the reason for the result given by RequestProcessed</td>
					</tr>
					
					<tr>
					<td>AdditionalInfo</td>
					<td>Additional textual info for debugging purposes</td>
					</tr>
					
					
					<tr>
					<td>Country</td>
					<td>Refer to Country in Appendix E for more details</td>
					</tr>
					
				
			
				</tbody>
							
			</table>						
	
	
	
		<h2>Helper Functions</h2>
		
		<h3>1. GetNetworks</h3>
						
						
		<p>This method returns a list of network operators for a specified country</p>
		
		<p>Full details on the format of the request are detailed here:<br />
		<a href="http://api.boxpay.com/v1_5.asmx?op=IPAddressToCountryCode">http://api.boxpay.com/v1_5.asmx?op=IPAddressToCountryCode</a></p>
				
							
		
				<h4>Request</h4>			  		
							  						
						
				<table>
				  						
					<thead>
						<tr>
						<th>Parameter</th>
						<th>Description</th>
						<th>Required</th>
						
						</tr>
					</thead>
					
					
					<tbody>
						<tr>
						<td>CountryCode</td>
						<td>Two letter ISO country code</td>
						<td>Yes</td>
						</tr>
						
						
						<tr>
						<td>AccessToken</td>
						<td>If additional security is enabled then a valid token should be passed. By default, a blank string should be passed.</td>
						<td>No</td>
						</tr>
						
						
					
				
					</tbody>
								
				</table>	
				
				
				
				
				<h4>Response</h4>			  		
							  						
						
				<table>
				  						
					<thead>
						<tr>
						<th>Parameter</th>
						<th>Description</th>
						  						
						</tr>
					</thead>
					
					
					<tbody>
		
						<tr>
						<td>RequestProcessed</td>
						<td>A Boolean value (true or false) to indicate whether or not the request was processed successfully.</td>
						</tr>
						
						<tr>
						<td>ReasonCode</td>
						<td>An enumeration to give extra details on the reason for the result given by RequestProcessed</td>
						</tr>
						
						<tr>
						<td>AdditionalInfo</td>
						<td>Additional textual info for debugging purposes</td>
						</tr>
						
						
						<tr>
						<td>List of Networks</td>
						<td></td>
						</tr>
						
						<tr>
						<td>NetworkId</td>
						<td>An integer value that uniquely identifies the user’s network operator (carrier) on the boxPAY platform.</td>
						</tr>
						
						<tr>
						<td>Name</td>
						<td>The name of the network operator</td>
						</tr>
						
						<tr>
						<td>CountryCode</td>
						<td>Two letter ISO country code</td>
						</tr>
						
						<tr>
						<td>MCCMNC</td>
						<td>The combination of Mobile Country Code (MCC) and Mobile Network Code (MNC) that uniquely identifies a mobile phone operator/carrier using the GSM/LTE, CDMA, iDEN, TETRA and UMTS public land mobile networks and some satellite mobile networks. This value can generally be accessed by client apps, e.g. Android app.</td>
						</tr>
						
					
				
					</tbody>
								
				</table>					
		
  						
  						
  						
  						
  				
  				
  				<h3>2. GetAllNetworks</h3>
  								
  								
  				<p>This method returns a list of network operators all supported countries</p>
  				
  				<p>Full details on the format of the request are detailed here:<br />
  				<a href="http://api.boxpay.com/v1_5.asmx?op=IPAddressToCountryCode">http://api.boxpay.com/v1_5.asmx?op=IPAddressToCountryCode</a></p>
  						
  									
  				
  						<h4>Request</h4>			  		
  									  						
  								
  						<table>
  						  						
  							<thead>
  								<tr>
  								<th>Parameter</th>
  								<th>Description</th>
  								<th>Required</th>
  								
  								</tr>
  							</thead>
  							
  							
  							<tbody>
  						
  								
  								<tr>
  								<td>AccessToken</td>
  								<td>If additional security is enabled then a valid token should be passed. By default, a blank string should be passed.</td>
  								<td>No</td>
  								</tr>
  								
  								
  							
  						
  							</tbody>
  										
  						</table>	
  						
  						
  						
  						
  						<h4>Response</h4>			  		
  									  						
  								
  						<table>
  						  						
  							<thead>
  								<tr>
  								<th>Parameter</th>
  								<th>Description</th>
  								  						
  								</tr>
  							</thead>
  							
  							
  							<tbody>
  				
  								<tr>
  								<td>RequestProcessed</td>
  								<td>A Boolean value (true or false) to indicate whether or not the request was processed successfully.</td>
  								</tr>
  								
  								<tr>
  								<td>ReasonCode</td>
  								<td>An enumeration to give extra details on the reason for the result given by RequestProcessed</td>
  								</tr>
  								
  								<tr>
  								<td>AdditionalInfo</td>
  								<td>Additional textual info for debugging purposes</td>
  								</tr>
  								
  								
  								<tr>
  								<td>List of Networks</td>
  								<td></td>
  								</tr>
  								
  								<tr>
  								<td>NetworkId</td>
  								<td>An integer value that uniquely identifies the user’s network operator (carrier) on the boxPAY platform.</td>
  								</tr>
  								
  								<tr>
  								<td>Name</td>
  								<td>The name of the network operator</td>
  								</tr>
  								
  								<tr>
  								<td>CountryCode</td>
  								<td>Two letter ISO country code</td>
  								</tr>
  								
  								<tr>
  								<td>MCCMNC</td>
  								<td>The combination of Mobile Country Code (MCC) and Mobile Network Code (MNC) that uniquely identifies a mobile phone operator/carrier using the GSM/LTE, CDMA, iDEN, TETRA and UMTS public land mobile networks and some satellite mobile networks. This value can generally be accessed by client apps, e.g. Android app.</td>
  								</tr>
  								
  							
  						
  							</tbody>
  										
  						</table>	
  				
  				
  				
  						
  						
				<h3>Appendix A – Reason Codes</h3>
				
				<ul class="no-bullet">
				
				<li><strong>None</strong> – No extra information </li>
				<li><strong>AwaitingUserAction</strong> – The payment can proceed once the user has completed the appropriate step (determined by the PaymentCaptureMethod). E.g the user must send a message to a shortcode. </li>
				<li><strong>PaymentItemNotFound</strong> – A payment item was not found for the service, country and item code defined. </li>
				<li><strong>InvalidMSISDN</strong> – The MSISDN passed is not in the valid international format required. </li>
				<li><strong>CountryCodeNotRecognised</strong> - The country code was not recognised as a valid ISO 3166-1 alpha-2 code country code.</li>
				<li><strong>PricepointNotFoundForPaymentItem</strong> – No active price point was found for the settings provided. Action: Check payment box settings and ensure appropriate values are passed. </li>
				<li><strong>PaymentItemDescriptionNotFound</strong> – The description for the payment item was not found. </li>
				<li><strong>ItemCodeNotValid</strong> – The item code was not provided </li>
				<li><strong>PricepointNotFound</strong> – No active price point was found. </li>
				<li><strong>LanguageCodeNotRecognised</strong> – The language code provided was not recognised as a valid 2- character ISO 639-1 code</li>
				<li><strong>MerchantNotFound</strong> – A valid merchant was not found. Action: Check that the correct ServiceId is being passed.</li>
				<li><strong>InvalidSignature</strong> – The signature does not match. Action: Check that the signature is being generated with the appropriate arguments in the correct order. </li>
				<li><strong>PaymentSuccessful</strong> – The payment is successful. No further action is required. </li>
				<li><strong>InvalidSessionId</strong> – The SessionId value provided is not a valid SessionId. </li>
				<li><strong>SessionNotFound</strong> – The session relating to the SessionId could not be found. </li>
				<li><strong>PaymentFailed</strong> – The payment failed. </li>
				<li><strong>AwaitingSMSFromUser</strong> - The payment can proceed once the user has sent a message to the appropriate shortcode.</li>
				<li><strong>AwaitingPINValidation</strong> - The payment can proceed once the user submits a PIN for validation.</li>
				<li><strong>ValidatePINCallNotAllowedForThisPaymentCaptureMethod</strong> – This method should not be called for this PaymentCaptureMethod </li>
				<li><strong>CorrectPinCompletingBilling</strong> – The PIN entered is correct. Billing will now be completed by boxPAY. </li>
				<li><strong>InvalidPIN</strong> – The PIN entered is incorrect. </li>
				<li><strong>ServiceNotFound</strong> – No information was found relating to the ServiceId provided. </li>
				<li><strong>NotSubscribed</strong> – The user in question is not currently part of the subscription </li>
				<li><strong>SuccessfullyUnsubscribed</strong> – The user has been successfully removed from the subscription </li>
				<li><strong>AwaitingMSISDNEntry</strong> – The payment can proceed once the user enters the mobile number. The SetMSISDN call should then be used. </li>
				<li><strong>OtherError</strong> – An unexpected error has occurred</li>
				<li><strong>SubscriberNotFound</strong> – Details on the subscriber could not be found.</li>
		
				
				</ul>
				
  						
  						
  				<h3>Appendix B – Subscription Status</h3>
  				
  				
  				<p>The following enumeration is used to indicate the status of a payment in relation to a user’s subscription, i.e. whether the payment session successfully subscribed the user or otherwise.</p>
  				
  				<ul class="no-bullet definition">
  				<li><strong>SUCCESS</strong> – The user was successfully subscribed </li>
  				<li><strong>ALREADYSUBSCRIBED</strong> - The user is already subscribed to the service. </li>
  				<li><strong>FAILED</strong> – An unexpected error occurred and the user was not subscribed to the service </li>
  				<li><strong>NOTAPPLICABLE</strong> – Given for one-off (non-subscription) payments or for payment sessions that were not completed i.e. user did not complete payment	</li>	
  				
  				</ul>
  				
  				
  				
  				
  				
  				<h3>Appendix C – Payment Capture Methods</h3>
  				
  				
  				<p>The “Payment Capture Method” is the name given to the process by which we complete a payment from a user. This process can differ based on a number of factors including country, client platform, mobile carrier, etc. The following are the Capture Methods used:</p>
  				
  				<ol>
  				<li>MOConfirm – the user confirms payment by sending an SMS to a shortcode</li>
  				<li>PinRequest – the user confirms payment in 2 steps: First by sending an SMS to a shortcode
  				to receive a reply containing a PIN (or a unique link). The user enters the Pin (or clicks link) to
  				complete payment process.</li>
  				<li>PinConfirm – the user receives a PIN (or a unique link) by SMS and enters the Pin (or clicks
  				link) to complete the payment process. This differs from 2. above as there is no message sent by the user.</li>	
  				
  				</ol>
  						
  						
  						
  				<p>In most cases the user’s mobile number (referred to by boxPAY as MSISDN) must be specified either in the <em>InitiatePayment</em> call or subsequently in <em>SetMSISDN</em>. This will require knowledge of the user’s mobile number prior to the the user’s interaction via SMS.</p>
  				
  				<p>In some cases, e.g for Android billing, the MSISDN is optional. This is specified in the <em>MSISDNRequired</em> field in the response of the <em>InitiatePayment</em> call.</p>
  				
  				<p>This section describes the possible payment capture methods that the user must follow to complete a payment. Based on the payment capture method being used, the merchant must prompt the user for the appropriate course of action.</p>		
  				<hr />	
  				
  				
  				
  				<!--    - - - - - - - - - - - - -->
  						
  						
  				<h6>Payment Capture Method</h6>		
  				<h6 class="em">MOConfirm <span>MSISDNRequired=true</span></h6>	
  				
  				
  				<p><strong>Expected StatusReason on InitiatePayment:</strong> 
  				
  				<br />
  				If MSISDN not set then StatusReason will be AwaitingMSISDNEntry
  				
  				<br />
  				If MSISDN is set then StatusReason will be AwaitingSMSFromUser</p>
  				<p><strong>Test case:</strong> UK payment box with ClientPlatform=Desktop Web.</p>
  						
  						
  				<h6>User Experience</h6>
  				<ul class="square">
  				<li>User enters MSISDN on merchant application/portal</li>
  				<li>User is prompted to send keyword to shortcode, e.g. BOX to 1995</li>
  				<li>Payment is completed by boxPAY</li>
  				
  				</ul>		
  					
  					
  				<h6>Course of Action on InitiatePayment</h6>		
  					
  				<ul class="no-bullet">
  				<li>1) If MSISDN has been omitted from the InitiatePayment call then SetMSISDN must be called before proceeding to 2)</li>
  				<li>2) Merchant should prompt user to send Keyword to Shortcode. This prompt is included in the UserMessageHTML, which can be displayed as is to the user.</li>
  				<li>3) Merchant can initiate CheckStatus calls</li>
  				
  				
  				</ul>		
  						
  				<h6>Course of Action on ValidatePIN</h6>	
  				<p>Not applicable</p>	
  						
  						
  				<h6>Course of Action on CheckStatus</h6>
  				
  				<ul class="no-bullet">
  				<li><strong>Status: Success/Failure</strong> - An appropriate message (UserMessageHTML) may be displayed to the user. No further action is required as the payment status is final.</li>
  				<li><strong>Status: Pending</strong> - The merchant should continue to poll CheckStatus.</li>
  				
  				</ul>		
  						
  				<hr />		
  				
  				
  				<!--    - - - - - - - - - - - - -->
  						
  						
  				<h6>Payment Capture Method</h6>		
  				<h6 class="em">MOConfirm <span>MSISDNRequired=false</span></h6>	
  				
  				
  				<p><strong>Expected StatusReason on InitiatePayment:</strong> 
  				
  				<br />
  				StatusReason will be AwaitingSMSFromUser</p>
  				
  				<p><strong>Test case:</strong> UK payment box with ClientPlatform=AndroidPhone.</p>
  						
  						
  				<h6>User Experience</h6>
  				<ul class="square">
  				<li>User is prompted to send keyword to shortcode, e.g. BOX to 1995</li>
  				<li>Payment is completed by boxPAY</li>
  				
  				</ul>		
  					
  					
  				<h6>Course of Action on InitiatePayment</h6>		
  					
  				<ul class="no-bullet">
  				<li>1) Merchant should prompt user to send Keyword to Shortcode. This prompt is included in the UserMessageHTML, which can be displayed as is to the user.</li>
  				<li>2) Merchant can initiate CheckStatus calls</li>
  				
  				
  				</ul>		
  						
  				<h6>Course of Action on ValidatePIN</h6>	
  				<p>Not applicable</p>	
  						
  						
  				<h6>Course of Action on CheckStatus</h6>
  				
  				<ul class="no-bullet">
  				<li><strong>Status: Success/Failure</strong> - An appropriate message (UserMessageHTML) may be displayed to the user. No further action is required as the payment status is final.</li>
  				<li><strong>Status: Pending</strong> - The merchant should continue to poll CheckStatus.</li>
  				
  				</ul>	
  				
  				
  				<hr />		
  				
  				
  				<!--    - - - - - - - - - - - - -->
  						
  						
  				<h6>Payment Capture Method</h6>		
  				<h6 class="em">PINRequest <span>MSISDNRequired=true/ false</span></h6>	
  				
  				
  				<p><strong>Expected StatusReason on InitiatePayment:</strong> 
  				
  				<br />
  				StatusReason will be AwaitingSMSFromUser</p>
  				
  				<p><strong>Test case:</strong> Malaysia payment box with ClientPlatform=Desktop Web.</p>
  						
  						
  				<h6>User Experience</h6>
  				<ul class="square">
  				<li>If MSISDNRequired = true: User enters MSISDN</li>
  				<li>User is prompted to send keyword to shortcode, e.g. BOX to 1995</li>
  				<li>User is sent a PIN by SMS</li>
  				<li>User enters PIN</li>
  				<li>Payment is completed by boxPAY</li>
  				
  				</ul>		
  					
  					
  				<h6>Course of Action on InitiatePayment</h6>		
  					
  				<ul class="no-bullet">
  				
  				<li>1) If MSISDNRequired = true and MSISDN has been omitted from the InitiatePayment call then SetMSISDN must be called before proceeding</li>
  				<li>2) Merchant should prompt user to send Keyword to Shortcode. This prompt is included in the UserMessageHTML, which can be displayed as is to the user.</li>
  				<li>3) An appropriate message (UserMessageHTML) should be displayed to the user prompting to enter the PIN.</li>
  				<li>4) Call ValidatePin with PIN supplied by user</li>
  				
  				</ul>		
  						
  				<h6>Course of Action on ValidatePIN</h6>	
  				<ul class="square">
  				<li>If ValidPin=true: An appropriate message (UserMessageHTML) may be displayed to the user. If the payment status is Pending then initiate calls to CheckStatus</li>
  				<li>If ValidPin=false: An appropriate message (UserMessageHTML) may be displayed to the user and prompt for another PIN entry.</li>
  				
  				</ul>
  						
  						
  				<h6>Course of Action on CheckStatus</h6>
  				
  				<ul class="no-bullet">
  				<li><strong>Status: Success/Failure</strong> - An appropriate message (UserMessageHTML) may be displayed to the user. No further action is required as the payment status is final.</li>
  				<li><strong>Status: Pending</strong> - The merchant should continue to poll CheckStatus.</li>
  				
  				</ul>			
  				
  					
  				<hr />		
  				
  				
  				<!--    - - - - - - - - - - - - -->
  						
  						
  				<h6>Payment Capture Method</h6>		
  				<h6 class="em">PINConfirm <span>MSISDNRequired=true</span></h6>	
  				
  				
  				<p><strong>Expected StatusReason on InitiatePayment:</strong> 
  				
  				<br />
  				StatusReason will be AwaitingSMSFromUser</p>
  				
  				<p><strong>Test case:</strong> Germany payment box with ClientPlatform=Desktop Web.</p>
  						
  						
  				<h6>User Experience</h6>
  				<ul class="square">
  				<li>User enters MSISDN</li>
   				<li>User is sent a PIN by SMS</li>
  				<li>User enters PIN</li>
  				<li>Payment is completed by boxPAY</li>
  				
  				</ul>		
  					
  					
  				<h6>Course of Action on InitiatePayment</h6>		
  					
  				<ul class="no-bullet">
  				
  				<li>1) If MSISDN has been omitted from the InitiatePayment call then SetMSISDN must be called before proceeding to 2)</li>
  				<li>2) An appropriate message (UserMessageHTML) should be displayed to the user prompting to enter the PIN.</li>
   				<li>3) Call ValidatePin with PIN supplied by user</li>
  				
  				</ul>		
  						
  				<h6>Course of Action on ValidatePIN</h6>	
  				<ul class="square">
  				<li><strong>Status: Success</strong> - An appropriate message (UserMessageHTML) may be displayed to the user. No further action is required as the payment is successful</li>
  				<li><strong>Status: Pending ReasonCode: CorrectPinCompletingBilling</strong> - An appropriate message (UserMessageHTML) should be displayed to the user. The merchant should then poll the status of the transaction via CheckStatus</li>
  				
  				</ul>
  						
  						
  				<h6>Course of Action on CheckStatus</h6>
  				
  				<ul class="no-bullet">
  				<li><strong>Status: Success/Failure</strong> - An appropriate message (UserMessageHTML) may be displayed to the user. No further action is required as the payment status is final.</li>
  				<li><strong>Status: Pending</strong> - The merchant should continue to poll CheckStatus.</li>
  				
  				</ul>			
  				
  				
  				
  				
  				<hr />		
  				<br />		
  						
  				
  				
  				<h3>Appendix D – Client Platforms</h3>
  				
  				<p>The Client Platform refers to the platform through which the end user is completing the payment process. Options are:</p>
  				
  				<ul>
  				<li>DesktopWeb</li>
  				<li>AndroidPhone</li>
  				<li>SmartphoneWeb</li>
  				<li>FeaturePhoneWeb</li>
  				<li>SmartTv</li>
  					
  				</li>		
  				
  				</ul>
  				
  				
  				<h3>Appendix E – Common Response Objects</h3>
  				<p>The following sets of parameters are used throughout a number of API calls, so are defined once here for clarity.</p>
  				
  				
  				
  				<h4>Payment Info</h4>			  		
  							  						
  						
  				<table>
  				  						
  					<thead>
  						<tr>
  						<th>Parameter</th>
  						<th>Description</th>
  	
  						
  						</tr>
  					</thead>
  					
  					
  					<tbody>
  				
					
					<tr>
					<td>TermsHTML</td>
					<td>Terms and Conditions that must be displayed to user before the user’s next action. This can include HTML markup.</td>
					</tr>
					
					
					<tr>
					<td>LanguageCode</td>
					<td>Specifies the language (2-character ISO 639-1 ) in which all user messages and terms are displayed.</td>
					</tr>
					
					<tr>
					<td><strong>PaymentItemInfo</strong></td>
					<td></td>
					</tr>
					
					
					<tr>
					<td>DisplayCharge</td>
					<td>The payment amount in Local Currency, formatted with currency symbol/code e.g $2.00</td>
					</tr>

					
					<tr>
					<td>Charge</td>
					<td>The payment amount as a decimal. E.g $2 will be 2.0</td>
					</tr>
					
					<tr>
					<td>ItemDescription</td>
					<td>The description entered by the merchant for this item on setup. E.g. “30 Gold Coins”.</td>
					</tr>
					
					<tr>
					<td>Country</td>
					<td>Refer to Country in Appendix E for more details</td>
					</tr>
					
					
					<tr>
					<td><strong>ResourceSet</strong></td>
					<td>A list of resource sets for each supported language</td>
					</tr>
					
					
					<tr>
					<td>LanguageCode</td>
					<td>The 2 letter ISO (639-1) language code</td>
					</tr>
					
					
					
					<tr>
					<td><strong>Resources</strong></td>
					<td>A list of resources to be displayed to user throughout the payment process</td>
					</tr>
					
					
					<tr>
					<td>Id</td>
					<td>The Resource Id. A mapping of where each resource should be displayed will be provided on request.</td>
					</tr>
					
					
					<tr>
					<td>Text</td>
					<td>The resource text to be displayed</td>
					</tr>
					
					
					<tr>
					<td>Subscription</td>
					<td>A Boolean (true/false) value indicating if this payment is a one-off payment (Subscription=false) or is the first payment as part of a Subscription (Subscription=true). This value is false by default.</td>
					</tr>
					
  						
  					
  				
  					</tbody>
  								
  				</table>	
  				
  				
  				
  				<h3>PaymentStatus</h3>
  						
  				<p>The following “PaymentStatus” parameters are returned in a number of API calls: <em>InitiatePayment</em>, <em>CheckStatus</em> and <em>SetMSISDN</em></p>		
  						
  						
  						
  				<table>
  						  						
							<thead>
								<tr>
								<th>Parameter</th>
								<th>Description</th>
								  						
								</tr>
							</thead>
							
							
							<tbody>
				
								<tr>
								<td>Charged</td>
								<td>The amount in local currency that has been charged to the user.</td>
								</tr>
								
								<tr>
								<td>UserMessageHTML</td>
								<td>An instructional message that should be displayed to the user to direct the user on how to proceed. This can include HTML markup.</td>
								</tr>
								
								<tr>
								<td>MSISDN</td>
								<td>The user’s mobile number, in international format. E.g a number in the UK will be of the form <em>447123456789</em>.</td>
								</tr>
								
								
								<tr>
								<td>NetworkId</td>
								<td>An integer value indicating the user’s network operator (carrier). A list of NetworkIds and associated networks is available in the <em>GetNetworks</em> and <em>GetAllNetworks</em> call. A value of 0 indicates the network is not known.</td>
								</tr>
								
								<tr>
								<td>SubscriptionStatus</td>
								<td>Applicable to Subscription Services only (see Appendix B)</td>
								</tr>
								
								<tr>
								<td>Status</td>
								<td>Indicates the success or otherwise of this call. Possible values are: -	
								
								<ul class="no-bullet">
								<li><strong>SUCCESS:</strong> the request was processed successfully and the payment has been successfully completed. No further action is necessary.</li>
								<li><strong>PENDING:</strong> the request was processed successfully. Payment has not yet been completed (may require user interaction)</li>
								<li><strong>FAILED:</strong> the request and/or payment failed. More details provided in StatusReason</li>
								
								</ul>
								
								
								
								</td>
								</tr>
								
								<tr>
								<td>StatusReason</td>
								<td>Provides extra details on the Status so that appropriate action can be taken. A detailed list of the Reason Codes is provided in Appendix A.</td>
								</tr>
								
								<tr>
								<td>ReturnUrl</td>
								<td>The URL to which the user should be redirected on payment completion. This is defined by the merchant on payment session initialization. The merchant will not be required to use property.</td>
								</tr>
								
							
						
							</tbody>
  										
  						</table>	
  						
  						
  				
  			<h4>Language</h4>			
  						
  			<table>
  					  						
				<thead>
					<tr>
					<th>Parameter</th>
					<th>Description</th>
					  						
					</tr>
				</thead>
				
				
				<tbody>
	
					<tr>
					<td>Name</td>
					<td>The language name in English</td>
					</tr>
					
					<tr>
					<td>LanguageCode</td>
					<td>The 2 letter ISO (639-1) language code</td>
					</tr>
					
					<tr>
					<td>LocalName</td>
					<td>The language name in the specified language</td>
					</tr>
					
					<tr>
					<td>IsDefault</td>
					<td>A Boolean value (true/false) indicating if the language is set as the default language for that country</td>
					</tr>
  				
  				</tbody>
  			
  			</table>	
  			
  			
  			<h4>Country</h4>			
  									
			<table>
						  						
				<thead>
					<tr>
					<th>Parameter</th>
					<th>Description</th>
					  						
					</tr>
				</thead>
				
				
				<tbody>
	
					<tr>
					<td>Name</td>
					<td>The country name in English</td>
					</tr>
					
					<tr>
					<td>CountryCode</td>
					<td>Two letter ISO country code</td>
					</tr>
					
					<tr>
					<td>CurrencyCode</td>
					<td>The ISO 4217 currency code indicating the local currency</td>
					</tr>
					
					<tr>
					<td><strong>Languages (list)</strong></td>
					<td>A list of supported languages for this country.</td>
					</tr>
					
					<tr>
					<td>InternationalPrefix</td>
					<td>The international dialling prefix for the country. These digits are the starting digits for the international MSISDN (mobile number).</td>
					</tr>
					
					<tr>
					<td>DisplayMSISDN StartingDigits</td>
					<td>Users should enter their number in local format. If provided, these digits should be prefilled in the MSISDN entry field. i.e. all user’s mobile numbers start with these digits. This can be used for mobile number validation.</td>
					</tr>
					
					<tr>
					<td>ValidStartingDigits</td>
					<td>A comma separated list of digits that represent the valid starting digits of a local mobile number (not including trunk). This can be used for mobile number validation.</td>
					</tr>
					
					
					<tr>
					<td>Trunk</td>
					<td>A Trunk is the number to be dialled in a domestic telephone call, preceding any necessary area codes and subscriber numbers. This can be used for mobile number validation.</td>
					</tr>
					
					<tr>
					<td>ValidInternational Lengths</td>
					<td>A list of integers that represent the valid lengths of MSISDNs (in international format) for this country. This can be used for mobile number validation.</td>
					</tr>
					
					
					
					
					
					</tbody>
				
				</table>			
				
  					
  					
  					
  				<h3>Appendix F - MSISDN Validation Code	</h3>
  				
  				<p>The code below can be used to get the MSISDN in international format. The country information (trunk, ValidStartingDigits etc) is included in the response to the calls listed below and more details on the Country information is detailed in Appendix E.</p>
  				
  				<ul> 
  				<li>GetPaymentInfo</li>
  				<li>GetCountries</li>
  				<li>GetCountry</li>
  				<li>InititiatePayment</li>
  				
  				</ul>
  					
  					
  					
<code>
<pre>
Validator: {

//Returns false if number is invalid, otherwise returns the formatted valid international MSISDN 
  ValidateMsisdn: function (msisdn, country) {
    internationalMsisdn = null;
    if (country.Trunk.Length > 0 && !msisdn.StartsWith(country.Trunk)) {
    return false;
    }
    
   var startingDigits = BoxPay.Validator.ProcessMsisdnCode(country.ValidStartingDigits);
   if (isNaN(msisdn)) {
    return false;
   }
   
  var startingDigitsAccepted = false; 
  for (i in startingDigits) {
    if (BoxPay.Utils.StartsWith(msisdn, country.Trunk + startingDigits[i])) { 
      startingDigitsAccepted = true;
      break;
    } 
  }  
  if (!startingDigitsAccepted) {
    return false;
  }

  if (country.Trunk.length > 0) {
    msisdn = msisdn.substring(country.Trunk.length);
  } 
  for (i in country.ValidInternationalLengths) {
    if ((country.InternationalPrefix + msisdn).length == parseInt(country.ValidInternationalLengths[i], 10)) { internationalMsisdn = country.InternationalPrefix + msisdn;
    } 
  }
 
  return internationalMsisdn;
},  
  

//Splits a comma or ‘–‘ separated list of digits that represent the valid starting digits 
    ProcessMsisdnCode: function (msisdnCodes) {
      var startingDigits = new Array();
      if (msisdnCodes.indexOf(',') != -1) {
        startingDigits = msisdnCodes.split(',');
      }
      
      else if (msisdnCodes.indexOf('-') != -1) {
        var minMax = msisdnCodes.split('-');
        for (var Val = minMax[0]; Val <= minMax[1]; Val++) {
          startingDigits.push(Val.toString()); 
        }
      } 
      else {
        startingDigits.push(msisdnCodes);
      }
      return startingDigits;
    }
  }
 


</pre>
</code>  					
  					
  					<h3>Appendix G - Flow Diagram and Resource Map (in-app)</h3><br/>
  					
  					<img src="/static/images/docs/api-flow-app.gif" alt="Flow Diagram and Resource Map (In-app)" />
  					
  					<br/>
  					
  					
  					<h3>Appendix H - Flow Diagram and Resource Map (Desktop)</h3> <br/>
  						
  					<img src="/static/images/docs/api-flow-desktop.gif" alt="Flow Diagram and Resource Map (Desktop)" />	
  						
  						
  						
  						
  						
  						
  						
  						
  						
  						
  						
  						</div>

  					</div>
  				</div>
  				
  				
 
  				
  				
  				
  			</div>		
  			
  			
  		
  		</section>
  		
  		
  		
  		
	<?php include($_SERVER['DOCUMENT_ROOT'].'/includes/sidebar.php')?>	
		
	</div><!-- container -->
			
  
<?php include($_SERVER['DOCUMENT_ROOT'].'/includes/footer.php')?>	
